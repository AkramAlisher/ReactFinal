[{"C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\index.tsx":"1","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\reportWebVitals.ts":"2","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\store\\reducers\\AuthReducer.ts":"3","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\App.tsx":"4","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Model\\AuthAction.enum.ts":"5","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\ErrorBoundary.tsx":"6","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Authorization\\Account.tsx":"7","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Authorization\\Login.tsx":"8","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Authorization\\Register.tsx":"9","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\MoviesList\\Movies.tsx":"10","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\MovieDetails\\MovieDetails.tsx":"11","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\navigation\\Navbar.tsx":"12","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\FavouritesMovies\\Favourites.tsx":"13","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\db\\axios.tsx":"14","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Api\\MovieApi.tsx":"15"},{"size":767,"mtime":1640419638680,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1640419638682,"results":"18","hashOfConfig":"17"},{"size":906,"mtime":1640419638683,"results":"19","hashOfConfig":"17"},{"size":2767,"mtime":1640419638671,"results":"20","hashOfConfig":"17"},{"size":150,"mtime":1640419638675,"results":"21","hashOfConfig":"17"},{"size":841,"mtime":1640419638675,"results":"22","hashOfConfig":"17"},{"size":1207,"mtime":1640419638672,"results":"23","hashOfConfig":"17"},{"size":2162,"mtime":1640419638672,"results":"24","hashOfConfig":"17"},{"size":2459,"mtime":1640419638673,"results":"25","hashOfConfig":"17"},{"size":2850,"mtime":1640419638679,"results":"26","hashOfConfig":"17"},{"size":3661,"mtime":1640419638678,"results":"27","hashOfConfig":"17"},{"size":1422,"mtime":1640419638681,"results":"28","hashOfConfig":"17"},{"size":1818,"mtime":1640419638675,"results":"29","hashOfConfig":"17"},{"size":129,"mtime":1640419638679,"results":"30","hashOfConfig":"17"},{"size":134,"mtime":1640419638670,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"t0tcsy",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\index.tsx",[],["70","71"],"C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\reportWebVitals.ts",[],"C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\store\\reducers\\AuthReducer.ts",[],"C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\App.tsx",[],"C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Model\\AuthAction.enum.ts",[],"C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\ErrorBoundary.tsx",[],"C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Authorization\\Account.tsx",["72","73","74","75"],"import React, {useContext, useReducer} from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport AuthContext from '../Context/AuthContext';\r\nimport './Account.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport AuthState from \"../Model/AuthState\";\r\nimport {AuthAction} from \"../Model/AuthAction.enum\";\r\nimport css from './Register.module.css'\r\n\r\ninterface Props {\r\n}\r\n\r\nexport default function Account({}: Props) {\r\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\r\n    const dispatch = useDispatch()\r\n\r\n    function logout() {\r\n        dispatch({type: AuthAction.LOGOUT})\r\n    }\r\n\r\n    return (\r\n        <div className={css.input_container}>\r\n            <div className={css.input_card}>\r\n                <h1>Account Details</h1>\r\n                <h2><span>Current state:</span> {authState.isLogged && 'Authorized'}</h2>\r\n                <h2><span>Username:</span> {authState.user?.username}</h2>\r\n                <h2><span>Password:</span> {authState.user?.password}</h2>\r\n                <button onClick={logout}>Logout</button>\r\n                {!authState.isLogged ? <Redirect to='/'/> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Authorization\\Login.tsx",["76","77"],"import React, {ReactElement, useCallback, useContext, useEffect, useState} from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport css from './Register.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport AuthState from \"../Model/AuthState\";\r\nimport User from \"../Model/User\";\r\nimport instance from \"../db/axios\";\r\nimport {AuthAction} from \"../Model/AuthAction.enum\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst API_USERS = '/people'\r\n\r\nexport default function Login({}: Props): ReactElement {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [users, setUsers] = useState<User[]>([])\r\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\r\n    const dispatch = useDispatch()\r\n\r\n    const loginOnChange = useCallback(e=>{\r\n        setUsername(e.target.value)\r\n    },[])\r\n    const passwordOnChange = useCallback(e=>{\r\n        setPassword(e.target.value)\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchUsers() {\r\n            const result = await instance.get(API_USERS)\r\n            setUsers([...result.data])\r\n        }\r\n\r\n        fetchUsers()\r\n    }, [])\r\n\r\n    function authenticateUser() {\r\n        const isPresent = users.find((user) => user.username === username && user.password === password) != null\r\n        const user = users.find((user) => user.username === username && user.password === password)\r\n        console.log(\"clicked\")\r\n        if (isPresent) {\r\n            dispatch({type: AuthAction.LOGIN, user: user})\r\n        } else {\r\n            dispatch({type: AuthAction.LOGIN})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={css.input_container}>\r\n            <div className={css.input_card}>\r\n                <h1>Login</h1>\r\n                <input type='text' placeholder='Username...' onChange={loginOnChange}/>\r\n                <input type='password' placeholder='Password...' onChange={passwordOnChange}/>\r\n                <button onClick={authenticateUser}>Login</button>\r\n                {authState.isLogged ? <Redirect to='/account'/> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Authorization\\Register.tsx",["78","79","80","81","82","83","84","85","86","87","88"],"import React, {ReactElement, useContext, useEffect, useState} from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport AuthContext from '../Context/AuthContext';\r\nimport User from '../Model/User';\r\nimport css from './Register.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport AuthState from \"../Model/AuthState\";\r\nimport instance from \"../db/axios\";\r\nimport {AuthAction} from \"../Model/AuthAction.enum\";\r\n\r\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n\r\ninterface Props {\r\n}\r\n\r\nconst API_USERS = '/people'\r\n\r\nexport default function Register({}: Props): ReactElement {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('')\r\n    const [users, setUsers] = useState<User[]>([])\r\n\r\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        async function fetchUsers() {\r\n            const result = await instance.get(API_USERS)\r\n            setUsers([...result.data])\r\n        }\r\n\r\n        fetchUsers()\r\n    }, [])\r\n\r\n    async function createUser() {\r\n        const isPresent = !!users.find((u) => u.username === username)\r\n        if (isPresent) {\r\n            // TODO handle case when the user is already registered\r\n            return\r\n        } else {\r\n            let user: User = {id: users.length, username: username, password: password, favourites: []}\r\n            const result = await instance.post(API_USERS, user)\r\n            dispatch({type: AuthAction.REGISTER, user: user})\r\n        }\r\n    }\r\n\r\n    function validate() {\r\n        if (username.length == 0 || password.length == 0 && email.length == 0) {\r\n            alert(\"There are some missing fields.\")\r\n            return\r\n        }\r\n        createUser()\r\n    }\r\n\r\n    return (\r\n        <div className={css.input_container}>\r\n            <div className={css.input_card}>\r\n                <h1>Registration</h1>\r\n                <input type='text' placeholder='Username...' onChange={(e) => setUsername(e.target.value)}/>\r\n                <input type='password' placeholder='Password...' onChange={(e) => setPassword(e.target.value)}/>\r\n                <button onClick={() => validate()}>Register</button>\r\n                {authState.isLogged ? <Redirect to='/account'/> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\MoviesList\\Movies.tsx",["89","90","91"],"import React, {Fragment, ReactElement, useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport movieApi from '../Api/MovieApi'\r\nimport Movie from '../Model/Movie'\r\nimport './Movies.css'\r\n\r\nconst api_key = 'b82c172e7bf6660516881c6a1ed616dd'\r\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\r\nconst DEFAULT_IMAGE_URL = 'https://d1csarkz8obe9u.cloudfront.net/posterpreviews/space-movie-poster-design-template-18133e937d93002c68b4649ea234d75f_screen.jpg?ts=1573539500'\r\n\r\nfunction Movies(): ReactElement {\r\n    console.log(\"Movies\")\r\n    const [movies, setMovies] = useState<Movie[]>([])\r\n    const [query, setQuery] = useState('')\r\n    const movies_query = '/3/discover/movie?api_key=' + api_key\r\n    const find_query = '/3/search/movie?api_key=' + api_key + '&language=en-US&query=' + query\r\n\r\n    useEffect(() => {\r\n        fetchMovies()\r\n    }, [])\r\n\r\n    async function fetchMovies() {\r\n        const response = await movieApi.get(movies_query)\r\n        const movies = response.data.results\r\n        setMovies(movies)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function find() {\r\n            const response = await movieApi.get(find_query)\r\n            const movies = response.data.results\r\n            setMovies(movies)\r\n        }\r\n\r\n        if (query.length > 0) {\r\n            find()\r\n        } else {\r\n            fetchMovies()\r\n        }\r\n\r\n    }, [query])\r\n\r\n    function getVoteAverageClass(average: number): string {\r\n        if (average > 7)\r\n            return 'green-title'\r\n        if (average >= 5)\r\n            return 'yellow-title'\r\n        return 'red-title'\r\n    }\r\n\r\n    return (\r\n        <div className='movies-page-container'>\r\n            <div className=\"search-container\">\r\n                <input type='text' placeholder='Find Movie...' onChange={(e) => setQuery(e.target.value)}/>\r\n            </div>\r\n            <div className={'movies-container'}>\r\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\r\n                    <Fragment key={id}>\r\n                        <Link to={'/' + id} className={'movie-item'}>\r\n                            <div className={'movie-item-image-container'}>\r\n                                <img className={'movie-item-image'}\r\n                                     src={poster_path != null ? IMAGE_URL + poster_path : DEFAULT_IMAGE_URL}/>\r\n                            </div>\r\n                            <div className={'movie-item-title-container'}>\r\n                                <h3 className={'movie-item-title'}>{title}</h3>\r\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\r\n                            </div>\r\n                        </Link>\r\n                    </Fragment>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\MovieDetails\\MovieDetails.tsx",["92","93","94","95","96","97"],"import React, {ReactElement, useContext, useEffect, useState} from 'react'\r\nimport {useRouteMatch} from 'react-router-dom'\r\nimport movieApi from '../Api/MovieApi';\r\nimport AuthContext from '../Context/AuthContext';\r\nimport Details from '../Model/Details';\r\nimport './MovieDetails.css'\r\nimport instance from \"../db/axios\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport AuthState from \"../Model/AuthState\";\r\nimport {AuthAction} from \"../Model/AuthAction.enum\";\r\n\r\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\r\nconst DEFAULT_IMAGE_URL = 'https://d1csarkz8obe9u.cloudfront.net/posterpreviews/space-movie-poster-design-template-18133e937d93002c68b4649ea234d75f_screen.jpg?ts=1573539500'\r\n\r\ninterface Props {\r\n}\r\n\r\nconst API_USERS = '/people'\r\n\r\nexport default function MovieDetails({}: Props): ReactElement {\r\n    const match = useRouteMatch<{ id: string }>();\r\n    const [movieDetails, setMovieDetails] = useState<Details>(\r\n        {id: 0, title: \"\", poster_path: \"\", vote_average: 0, overview: \"\"}\r\n    )\r\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\r\n    const [isAlreadyPresent, setIsAlreadyPresent] = useState<Boolean>(false)\r\n    const details_query = '3/movie/' + match.params.id + '?api_key=b82c172e7bf6660516881c6a1ed616dd'\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        async function fetchMovieDetails() {\r\n            const response = await movieApi.get(details_query)\r\n            const result = response.data\r\n            let details: Details = {\r\n                id: result.id,\r\n                title: result.title,\r\n                poster_path: result.poster_path,\r\n                vote_average: result.vote_average,\r\n                overview: result.overview\r\n            }\r\n            setMovieDetails(result)\r\n            setIsAlreadyPresent(!!authState.user?.favourites.find((movie) => movie.id == details.id))\r\n        }\r\n\r\n        fetchMovieDetails()\r\n    }, [])\r\n\r\n    async function addToFavourites() {\r\n        let user = authState.user\r\n        let isMoviePresent = user?.favourites.find((movie) => movie.id === movieDetails.id) != null\r\n\r\n        if (!isMoviePresent) {\r\n            user?.favourites.push(movieDetails)\r\n            const response = await instance.patch(`${API_USERS}/${user?.id}`, user)\r\n            dispatch({type: AuthAction.UPDATE, user: user})\r\n        }\r\n\r\n        setIsAlreadyPresent(true)\r\n    }\r\n\r\n    if (movieDetails.title === 'Ten') {\r\n        throw new Error('Bad Movie')\r\n    }\r\n    return (\r\n        <div className={'movie-details-container'}>\r\n            <div className={'movie-details-mini-container'}>\r\n                <div className={'movie-img-container'}>\r\n                    <img\r\n                        src={movieDetails.poster_path != null ? IMAGE_URL + movieDetails.poster_path : DEFAULT_IMAGE_URL}\r\n                        alt='movie_poster'/>\r\n                </div>\r\n                <div className={'movie-text-container'}>\r\n                    <h2>{movieDetails.title}</h2>\r\n                    <h3><span className={'movie-text'}>Rating:</span> {movieDetails.vote_average}</h3>\r\n                    <p><span className={'movie-text'}>Overview:</span><br/>{movieDetails.overview}</p>\r\n                    {authState.isLogged && !isAlreadyPresent ?\r\n                        <button onClick={() => addToFavourites()}>Add to Favourites</button> : null}\r\n                    {authState.isLogged && isAlreadyPresent ?\r\n                        <h3 className={'favourite-text'}>You have added the movie to your favourites list</h3> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\navigation\\Navbar.tsx",["98","99","100","101"],"import React, {ReactElement, useCallback, useContext} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport AuthContext from \"../Context/AuthContext\";\r\nimport './Navbar.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport AuthState from \"../Model/AuthState\";\r\n\r\ninterface Props {\r\n}\r\n\r\nexport default function NavBar({}: Props): ReactElement {\r\n    // const authState = useContext(AuthContext)\r\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\r\n\r\n    return (\r\n        <div className=\"nav-bar\">\r\n            <ul>\r\n                <Link to=\"/\">\r\n                    <li>Movies</li>\r\n                </Link>\r\n                {authState.isLogged ?\r\n                    <Link to='/favourites'>\r\n                        <li>Favourites</li>\r\n                    </Link>\r\n                    : null}\r\n                {authState.isLogged ?\r\n                    <Link to='/account'>\r\n                        <li>Account</li>\r\n                    </Link>\r\n                    : null}\r\n                {authState.isLogged ? null :\r\n                    <Link to=\"/login\">\r\n                        <li>Login</li>\r\n                    </Link>\r\n                }\r\n                {authState.isLogged ? null :\r\n                    <Link to=\"/register\">\r\n                        <li>Register</li>\r\n                    </Link>\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\FavouritesMovies\\Favourites.tsx",["102","103","104","105","106","107"],"import React, {Fragment, ReactElement, useContext, useEffect, useReducer, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport AuthContext from '../Context/AuthContext'\r\nimport '../MoviesList/Movies.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport AuthState from \"../Model/AuthState\";\r\n\r\nexport default function Favourites(): ReactElement {\r\n    // const authState = useContext(AuthContext)\r\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\r\n\r\n    const movies = authState.user?.favourites\r\n\r\n    console.log(authState)\r\n\r\n    function getVoteAverageClass(average: number): string {\r\n        if (average > 7)\r\n            return 'green-title'\r\n        if (average >= 5)\r\n            return 'yellow-title'\r\n        return 'red-title'\r\n    }\r\n\r\n    return (\r\n        <div className='movies-page-container'>\r\n            <div className={'movies-container'}>\r\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\r\n                    <Fragment key={id}>\r\n                        <Link to={'/' + id} className={'movie-item'}>\r\n                            <div className={'movie-item-image-container'}>\r\n                                <img className={'movie-item-image'}\r\n                                     src={'https://image.tmdb.org/t/p/w500' + poster_path}/>\r\n                            </div>\r\n                            <div className={'movie-item-title-container'}>\r\n                                <h3 className={'movie-item-title'}>{title}</h3>\r\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\r\n                            </div>\r\n                        </Link>\r\n                    </Fragment>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\db\\axios.tsx",[],"C:\\Users\\akram\\OneDrive\\Документы\\Sites\\ReactMovieApplication\\movie\\src\\Api\\MovieApi.tsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"116","line":1,"column":28,"nodeType":"114","messageId":"115","endLine":1,"endColumn":38},{"ruleId":"112","severity":1,"message":"117","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":13,"column":33,"nodeType":"120","messageId":"121","endLine":13,"endColumn":42},{"ruleId":"112","severity":1,"message":"113","line":1,"column":43,"nodeType":"114","messageId":"115","endLine":1,"endColumn":53},{"ruleId":"118","severity":1,"message":"119","line":16,"column":31,"nodeType":"120","messageId":"121","endLine":16,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":1,"column":30,"nodeType":"114","messageId":"115","endLine":1,"endColumn":40},{"ruleId":"112","severity":1,"message":"117","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":19},{"ruleId":"112","severity":1,"message":"122","line":11,"column":7,"nodeType":"114","messageId":"115","endLine":11,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":18,"column":34,"nodeType":"120","messageId":"121","endLine":18,"endColumn":43},{"ruleId":"112","severity":1,"message":"123","line":21,"column":19,"nodeType":"114","messageId":"115","endLine":21,"endColumn":27},{"ruleId":"112","severity":1,"message":"124","line":43,"column":19,"nodeType":"114","messageId":"115","endLine":43,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":49,"column":29,"nodeType":"127","messageId":"121","endLine":49,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":49,"column":34,"nodeType":"130","messageId":"131","endLine":49,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":49,"column":53,"nodeType":"127","messageId":"121","endLine":49,"endColumn":55},{"ruleId":"128","severity":1,"message":"129","line":49,"column":58,"nodeType":"130","messageId":"131","endLine":49,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":49,"column":74,"nodeType":"127","messageId":"121","endLine":49,"endColumn":76},{"ruleId":"132","severity":1,"message":"133","line":20,"column":8,"nodeType":"134","endLine":20,"endColumn":10,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":41,"column":8,"nodeType":"134","endLine":41,"endColumn":15,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":61,"column":33,"nodeType":"140","endLine":62,"endColumn":111},{"ruleId":"112","severity":1,"message":"113","line":1,"column":30,"nodeType":"114","messageId":"115","endLine":1,"endColumn":40},{"ruleId":"112","severity":1,"message":"117","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":20,"column":38,"nodeType":"120","messageId":"121","endLine":20,"endColumn":47},{"ruleId":"125","severity":1,"message":"126","line":42,"column":87,"nodeType":"127","messageId":"121","endLine":42,"endColumn":89},{"ruleId":"132","severity":1,"message":"141","line":46,"column":8,"nodeType":"134","endLine":46,"endColumn":10,"suggestions":"142"},{"ruleId":"112","severity":1,"message":"143","line":54,"column":19,"nodeType":"114","messageId":"115","endLine":54,"endColumn":27},{"ruleId":"112","severity":1,"message":"144","line":1,"column":30,"nodeType":"114","messageId":"115","endLine":1,"endColumn":41},{"ruleId":"112","severity":1,"message":"113","line":1,"column":43,"nodeType":"114","messageId":"115","endLine":1,"endColumn":53},{"ruleId":"112","severity":1,"message":"117","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":11,"column":32,"nodeType":"120","messageId":"121","endLine":11,"endColumn":41},{"ruleId":"112","severity":1,"message":"113","line":1,"column":40,"nodeType":"114","messageId":"115","endLine":1,"endColumn":50},{"ruleId":"112","severity":1,"message":"145","line":1,"column":52,"nodeType":"114","messageId":"115","endLine":1,"endColumn":61},{"ruleId":"112","severity":1,"message":"116","line":1,"column":63,"nodeType":"114","messageId":"115","endLine":1,"endColumn":73},{"ruleId":"112","severity":1,"message":"146","line":1,"column":75,"nodeType":"114","messageId":"115","endLine":1,"endColumn":83},{"ruleId":"112","severity":1,"message":"117","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":31,"column":33,"nodeType":"140","endLine":32,"endColumn":93},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'AuthContext' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'EMAIL_REGEX' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'result' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has missing dependencies: 'fetchMovies' and 'find_query'. Either include them or remove the dependency array.",["150"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'authState.user?.favourites' and 'details_query'. Either include them or remove the dependency array.",["151"],"'response' is assigned a value but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [fetchMovies]",{"range":"158","text":"159"},"Update the dependencies array to be: [fetchMovies, find_query, query]",{"range":"160","text":"161"},"Update the dependencies array to be: [authState.user?.favourites, details_query]",{"range":"162","text":"163"},[873,875],"[fetchMovies]",[1386,1393],"[fetchMovies, find_query, query]",[1966,1968],"[authState.user?.favourites, details_query]"]