[{"/Users/aibar/WebstormProjects/ReactFinal/movie/src/index.tsx":"1","/Users/aibar/WebstormProjects/ReactFinal/movie/src/reportWebVitals.ts":"2","/Users/aibar/WebstormProjects/ReactFinal/movie/src/App.tsx":"3","/Users/aibar/WebstormProjects/ReactFinal/movie/src/Model/AuthAction.enum.ts":"4","/Users/aibar/WebstormProjects/ReactFinal/movie/src/ErrorBoundary.tsx":"5","/Users/aibar/WebstormProjects/ReactFinal/movie/src/Authorization/Register.tsx":"6","/Users/aibar/WebstormProjects/ReactFinal/movie/src/navigation/Navbar.tsx":"7","/Users/aibar/WebstormProjects/ReactFinal/movie/src/MoviesList/Movies.tsx":"8","/Users/aibar/WebstormProjects/ReactFinal/movie/src/MovieDetails/MovieDetails.tsx":"9","/Users/aibar/WebstormProjects/ReactFinal/movie/src/Authorization/Login.tsx":"10","/Users/aibar/WebstormProjects/ReactFinal/movie/src/Authorization/Account.tsx":"11","/Users/aibar/WebstormProjects/ReactFinal/movie/src/FavouritesMovies/Favourites.tsx":"12","/Users/aibar/WebstormProjects/ReactFinal/movie/src/db/axios.tsx":"13","/Users/aibar/WebstormProjects/ReactFinal/movie/src/Api/MovieApi.tsx":"14","/Users/aibar/WebstormProjects/ReactFinal/movie/src/store/reducers/AuthReducer.ts":"15"},{"size":742,"mtime":1640545051887,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1640421804597,"results":"18","hashOfConfig":"17"},{"size":2411,"mtime":1640574960318,"results":"19","hashOfConfig":"17"},{"size":144,"mtime":1640421804595,"results":"20","hashOfConfig":"17"},{"size":807,"mtime":1640421804595,"results":"21","hashOfConfig":"17"},{"size":2621,"mtime":1640527098550,"results":"22","hashOfConfig":"17"},{"size":1062,"mtime":1640575074313,"results":"23","hashOfConfig":"17"},{"size":2887,"mtime":1640521591729,"results":"24","hashOfConfig":"17"},{"size":3578,"mtime":1640545032742,"results":"25","hashOfConfig":"17"},{"size":2349,"mtime":1640526861635,"results":"26","hashOfConfig":"17"},{"size":1174,"mtime":1640421804594,"results":"27","hashOfConfig":"17"},{"size":1774,"mtime":1640421804595,"results":"28","hashOfConfig":"17"},{"size":123,"mtime":1640421804596,"results":"29","hashOfConfig":"17"},{"size":128,"mtime":1640421804594,"results":"30","hashOfConfig":"17"},{"size":877,"mtime":1640545122269,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ho8y4j",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/aibar/WebstormProjects/ReactFinal/movie/src/index.tsx",[],["69","70"],"/Users/aibar/WebstormProjects/ReactFinal/movie/src/reportWebVitals.ts",[],"/Users/aibar/WebstormProjects/ReactFinal/movie/src/App.tsx",["71","72"],"/Users/aibar/WebstormProjects/ReactFinal/movie/src/Model/AuthAction.enum.ts",[],"/Users/aibar/WebstormProjects/ReactFinal/movie/src/ErrorBoundary.tsx",[],"/Users/aibar/WebstormProjects/ReactFinal/movie/src/Authorization/Register.tsx",["73","74","75","76","77","78","79","80","81","82","83"],"import React, {ReactElement, useContext, useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport User from '../Model/User';\nimport css from './Register.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\nimport instance from \"../db/axios\";\nimport {AuthAction} from \"../Model/AuthAction.enum\";\nimport {Stack, TextField} from \"@mui/material\";\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n\ninterface Props {\n}\n\nconst API_USERS = '/people'\n\nexport default function Register({}: Props): ReactElement {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('')\n    const [users, setUsers] = useState<User[]>([])\n\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        async function fetchUsers() {\n            const result = await instance.get(API_USERS)\n            setUsers([...result.data])\n        }\n\n        fetchUsers()\n    }, [])\n\n    async function createUser() {\n        const isPresent = !!users.find((u) => u.username === username)\n        if (isPresent) {\n            // TODO handle case when the user is already registered\n            return\n        } else {\n            let user: User = {id: users.length, username: username, password: password, favourites: []}\n            const result = await instance.post(API_USERS, user)\n            dispatch({type: AuthAction.REGISTER, user: user})\n        }\n    }\n\n    function validate() {\n        if (username.length == 0 || password.length == 0 && email.length == 0) {\n            alert(\"There are some missing fields.\")\n            return\n        }\n        createUser()\n    }\n\n    return (\n        <div className={css.input_container}>\n            <div className={css.input_card}>\n                <h1>Registration</h1>\n                <Stack sx={{ width: '60%' }}>\n                    <TextField type='text' placeholder='Enter the username' onChange={(e) => setUsername(e.target.value)}/>\n                </Stack>\n                <Stack sx={{ width: '60%', mt: 3 }}>\n                    <TextField type='password' placeholder='Enter the password.' onChange={(e) => setPassword(e.target.value)}/>\n                </Stack>\n                <button onClick={() => validate()}>Register</button>\n                {authState.isLogged ? <Redirect to='/account'/> : null}\n            </div>\n        </div>\n    )\n}","/Users/aibar/WebstormProjects/ReactFinal/movie/src/navigation/Navbar.tsx",["84","85","86","87","88"],"/Users/aibar/WebstormProjects/ReactFinal/movie/src/MoviesList/Movies.tsx",["89","90","91","92"],"import React, {Fragment, ReactElement, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport movieApi from '../Api/MovieApi'\nimport Movie from '../Model/Movie'\nimport './Movies.css'\nimport {Card, Stack, TextField} from \"@mui/material\";\n\nconst api_key = 'b82c172e7bf6660516881c6a1ed616dd'\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\nconst DEFAULT_IMAGE_URL = 'https://d1csarkz8obe9u.cloudfront.net/posterpreviews/space-movie-poster-design-template-18133e937d93002c68b4649ea234d75f_screen.jpg?ts=1573539500'\n\nfunction Movies(): ReactElement {\n    console.log(\"Movies\")\n    const [movies, setMovies] = useState<Movie[]>([])\n    const [query, setQuery] = useState('')\n    const movies_query = '/3/discover/movie?api_key=' + api_key\n    const find_query = '/3/search/movie?api_key=' + api_key + '&language=en-US&query=' + query\n\n    useEffect(() => {\n        fetchMovies()\n    }, [])\n\n    async function fetchMovies() {\n        const response = await movieApi.get(movies_query)\n        const movies = response.data.results\n        setMovies(movies)\n    }\n\n    useEffect(() => {\n        async function find() {\n            const response = await movieApi.get(find_query)\n            const movies = response.data.results\n            setMovies(movies)\n        }\n\n        if (query.length > 0) {\n            find()\n        } else {\n            fetchMovies()\n        }\n\n    }, [query])\n\n    function getVoteAverageClass(average: number): string {\n        if (average > 7)\n            return 'green-title';\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className=\"search-container\">\n                <TextField variant=\"filled\" placeholder='Find Movie...' sx={{ width: '40%', bgcolor: \"white\" }} onChange={(e) => setQuery(e.target.value)}/>\n            </div>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id}>\n                        <Link to={'/' + id} className={'movie-item'}>\n                            <Stack className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'}\n                                     src={poster_path != null ? IMAGE_URL + poster_path : DEFAULT_IMAGE_URL}/>\n                            </Stack>\n                            <Stack className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </Stack>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Movies","/Users/aibar/WebstormProjects/ReactFinal/movie/src/MovieDetails/MovieDetails.tsx",["93","94","95","96","97","98"],"import React, {ReactElement, useContext, useEffect, useState} from 'react'\nimport {useRouteMatch} from 'react-router-dom'\nimport movieApi from '../Api/MovieApi';\nimport AuthContext from '../Context/AuthContext';\nimport Details from '../Model/Details';\nimport './MovieDetails.css'\nimport instance from \"../db/axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\nimport {AuthAction} from \"../Model/AuthAction.enum\";\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\nconst DEFAULT_IMAGE_URL = 'https://d1csarkz8obe9u.cloudfront.net/posterpreviews/space-movie-poster-design-template-18133e937d93002c68b4649ea234d75f_screen.jpg?ts=1573539500'\n\ninterface Props {\n}\n\nconst API_USERS = '/people'\n\nexport default function MovieDetails({}: Props): ReactElement {\n    const match = useRouteMatch<{ id: string }>();\n    const [movieDetails, setMovieDetails] = useState<Details>(\n        {id: 0, title: \"\", poster_path: \"\", vote_average: 0, overview: \"\"}\n    )\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n    const [isAlreadyPresent, setIsAlreadyPresent] = useState<Boolean>(false)\n    const details_query = '3/movie/' + match.params.id + '?api_key=b82c172e7bf6660516881c6a1ed616dd'\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        async function fetchMovieDetails() {\n            const response = await movieApi.get(details_query)\n            const result = response.data\n            let details: Details = {\n                id: result.id,\n                title: result.title,\n                poster_path: result.poster_path,\n                vote_average: result.vote_average,\n                overview: result.overview\n            }\n            setMovieDetails(result)\n            setIsAlreadyPresent(!!authState.user?.favourites.find((movie) => movie.id == details.id))\n        }\n\n        fetchMovieDetails()\n    }, [])\n\n    async function addToFavourites() {\n        let user = authState.user\n        let isMoviePresent = user?.favourites.find((movie) => movie.id === movieDetails.id) != null\n\n        if (!isMoviePresent) {\n            user?.favourites.push(movieDetails)\n            const response = await instance.patch(`${API_USERS}/${user?.id}`, user)\n            dispatch({type: AuthAction.UPDATE, user: user})\n        }\n\n        setIsAlreadyPresent(true)\n    }\n\n    if (movieDetails.title === 'Ten') {\n        throw new Error('Bad Movie')\n    }\n    return (\n        <div className={'movie-details-container'}>\n            <div className={'movie-details-mini-container'}>\n                <div className={'movie-img-container'}>\n                    <img\n                        src={movieDetails.poster_path != null ? IMAGE_URL + movieDetails.poster_path : DEFAULT_IMAGE_URL}\n                        alt='movie_poster'/>\n                </div>\n                <div className={'movie-text-container'}>\n                    <h2>{movieDetails.title}</h2>\n                    <h3><span className={'movie-text'}>Rating:</span> {movieDetails.vote_average}</h3>\n                    <p><span className={'movie-text'}>Overview:</span><br/>{movieDetails.overview}</p>\n                    {authState.isLogged && !isAlreadyPresent ?\n                        <button onClick={() => addToFavourites()}>Add to Favourites</button> : null}\n                    {authState.isLogged && isAlreadyPresent ?\n                        <h3 className={'favourite-text'}>You have added the movie to your favourites list</h3> : null}\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/aibar/WebstormProjects/ReactFinal/movie/src/Authorization/Login.tsx",["99","100","101"],"import React, {ReactElement, useCallback, useContext, useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport css from './Register.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\nimport User from \"../Model/User\";\nimport instance from \"../db/axios\";\nimport {AuthAction} from \"../Model/AuthAction.enum\";\nimport {Button, Stack, TextField} from \"@mui/material\";\n\ninterface Props {\n\n}\n\nconst API_USERS = '/people'\n\nexport default function Login({}: Props): ReactElement {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [users, setUsers] = useState<User[]>([])\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n    const dispatch = useDispatch()\n\n    const loginOnChange = useCallback(e => {\n        setUsername(e.target.value)\n    }, [])\n    const passwordOnChange = useCallback(e => {\n        setPassword(e.target.value)\n    }, [])\n\n\n    useEffect(() => {\n        async function fetchUsers() {\n            const result = await instance.get(API_USERS)\n            setUsers([...result.data])\n        }\n\n        fetchUsers()\n    }, [])\n\n    function authenticateUser() {\n        const isPresent = users.find((user) => user.username === username && user.password === password) != null\n        const user = users.find((user) => user.username === username && user.password === password)\n        console.log(\"clicked\")\n        if (isPresent) {\n            dispatch({type: AuthAction.LOGIN, user: user})\n        } else {\n            dispatch({type: AuthAction.LOGIN})\n        }\n    }\n\n    return (\n        <div className={css.input_container}>\n            <div className={css.input_card}>\n                <h1>Authorization</h1>\n                <Stack sx={{ width: '60%' }}>\n                    <TextField type='text' placeholder='Enter the username' onChange={loginOnChange}/>\n                </Stack>\n                <Stack sx={{ mt: 3, width: '60%' }}>\n                    <TextField type='password' placeholder='Enter the password' onChange={passwordOnChange}/>\n                </Stack>\n                <button onClick={authenticateUser}>Login</button>\n                {authState.isLogged ? <Redirect to='/account'/> : null}\n            </div>\n        </div>\n    );\n}\n","/Users/aibar/WebstormProjects/ReactFinal/movie/src/Authorization/Account.tsx",["102","103","104","105"],"import React, {useContext, useReducer} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport './Account.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\nimport {AuthAction} from \"../Model/AuthAction.enum\";\nimport css from './Register.module.css'\n\ninterface Props {\n}\n\nexport default function Account({}: Props) {\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n    const dispatch = useDispatch()\n\n    function logout() {\n        dispatch({type: AuthAction.LOGOUT})\n    }\n\n    return (\n        <div className={css.input_container}>\n            <div className={css.input_card}>\n                <h1>Account Details</h1>\n                <h2><span>Current state:</span> {authState.isLogged && 'Authorized'}</h2>\n                <h2><span>Username:</span> {authState.user?.username}</h2>\n                <h2><span>Password:</span> {authState.user?.password}</h2>\n                <button onClick={logout}>Logout</button>\n                {!authState.isLogged ? <Redirect to='/'/> : null}\n            </div>\n        </div>\n    )\n}\n","/Users/aibar/WebstormProjects/ReactFinal/movie/src/FavouritesMovies/Favourites.tsx",["106","107","108","109","110","111"],"import React, {Fragment, ReactElement, useContext, useEffect, useReducer, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthContext from '../Context/AuthContext'\nimport '../MoviesList/Movies.css'\nimport {useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\n\nexport default function Favourites(): ReactElement {\n    // const authState = useContext(AuthContext)\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n\n    const movies = authState.user?.favourites\n\n    console.log(authState)\n\n    function getVoteAverageClass(average: number): string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id}>\n                        <Link to={'/' + id} className={'movie-item'}>\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'}\n                                     src={'https://image.tmdb.org/t/p/w500' + poster_path}/>\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n","/Users/aibar/WebstormProjects/ReactFinal/movie/src/db/axios.tsx",[],"/Users/aibar/WebstormProjects/ReactFinal/movie/src/Api/MovieApi.tsx",[],"/Users/aibar/WebstormProjects/ReactFinal/movie/src/store/reducers/AuthReducer.ts",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":9,"column":7,"nodeType":"118","messageId":"119","endLine":9,"endColumn":18},{"ruleId":"116","severity":1,"message":"120","line":12,"column":7,"nodeType":"118","messageId":"119","endLine":12,"endColumn":21},{"ruleId":"116","severity":1,"message":"121","line":1,"column":30,"nodeType":"118","messageId":"119","endLine":1,"endColumn":40},{"ruleId":"116","severity":1,"message":"122","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":19},{"ruleId":"116","severity":1,"message":"123","line":12,"column":7,"nodeType":"118","messageId":"119","endLine":12,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":19,"column":34,"nodeType":"126","messageId":"127","endLine":19,"endColumn":43},{"ruleId":"116","severity":1,"message":"128","line":22,"column":19,"nodeType":"118","messageId":"119","endLine":22,"endColumn":27},{"ruleId":"116","severity":1,"message":"129","line":44,"column":19,"nodeType":"118","messageId":"119","endLine":44,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":50,"column":29,"nodeType":"132","messageId":"127","endLine":50,"endColumn":31},{"ruleId":"133","severity":1,"message":"134","line":50,"column":34,"nodeType":"135","messageId":"136","endLine":50,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":50,"column":53,"nodeType":"132","messageId":"127","endLine":50,"endColumn":55},{"ruleId":"133","severity":1,"message":"134","line":50,"column":58,"nodeType":"135","messageId":"136","endLine":50,"endColumn":60},{"ruleId":"130","severity":1,"message":"131","line":50,"column":74,"nodeType":"132","messageId":"127","endLine":50,"endColumn":76},{"ruleId":"116","severity":1,"message":"137","line":1,"column":30,"nodeType":"118","messageId":"119","endLine":1,"endColumn":41},{"ruleId":"116","severity":1,"message":"121","line":1,"column":43,"nodeType":"118","messageId":"119","endLine":1,"endColumn":53},{"ruleId":"116","severity":1,"message":"122","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":19},{"ruleId":"116","severity":1,"message":"138","line":7,"column":9,"nodeType":"118","messageId":"119","endLine":7,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":12,"column":32,"nodeType":"126","messageId":"127","endLine":12,"endColumn":41},{"ruleId":"116","severity":1,"message":"139","line":6,"column":9,"nodeType":"118","messageId":"119","endLine":6,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":21,"column":8,"nodeType":"142","endLine":21,"endColumn":10,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":42,"column":8,"nodeType":"142","endLine":42,"endColumn":15,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":62,"column":33,"nodeType":"148","endLine":63,"endColumn":111},{"ruleId":"116","severity":1,"message":"121","line":1,"column":30,"nodeType":"118","messageId":"119","endLine":1,"endColumn":40},{"ruleId":"116","severity":1,"message":"122","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":20,"column":38,"nodeType":"126","messageId":"127","endLine":20,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":42,"column":87,"nodeType":"132","messageId":"127","endLine":42,"endColumn":89},{"ruleId":"140","severity":1,"message":"149","line":46,"column":8,"nodeType":"142","endLine":46,"endColumn":10,"suggestions":"150"},{"ruleId":"116","severity":1,"message":"151","line":54,"column":19,"nodeType":"118","messageId":"119","endLine":54,"endColumn":27},{"ruleId":"116","severity":1,"message":"121","line":1,"column":43,"nodeType":"118","messageId":"119","endLine":1,"endColumn":53},{"ruleId":"116","severity":1,"message":"152","line":9,"column":9,"nodeType":"118","messageId":"119","endLine":9,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":17,"column":31,"nodeType":"126","messageId":"127","endLine":17,"endColumn":40},{"ruleId":"116","severity":1,"message":"121","line":1,"column":16,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"153","line":1,"column":28,"nodeType":"118","messageId":"119","endLine":1,"endColumn":38},{"ruleId":"116","severity":1,"message":"122","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":13,"column":33,"nodeType":"126","messageId":"127","endLine":13,"endColumn":42},{"ruleId":"116","severity":1,"message":"121","line":1,"column":40,"nodeType":"118","messageId":"119","endLine":1,"endColumn":50},{"ruleId":"116","severity":1,"message":"154","line":1,"column":52,"nodeType":"118","messageId":"119","endLine":1,"endColumn":61},{"ruleId":"116","severity":1,"message":"153","line":1,"column":63,"nodeType":"118","messageId":"119","endLine":1,"endColumn":73},{"ruleId":"116","severity":1,"message":"155","line":1,"column":75,"nodeType":"118","messageId":"119","endLine":1,"endColumn":83},{"ruleId":"116","severity":1,"message":"122","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":31,"column":33,"nodeType":"148","endLine":32,"endColumn":93},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"@typescript-eslint/no-unused-vars","'AccountPage' is assigned a value but never used.","Identifier","unusedVar","'FavouritesPage' is assigned a value but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'EMAIL_REGEX' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setEmail' is assigned a value but never used.","'result' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'useCallback' is defined but never used.","'Typography' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has missing dependencies: 'fetchMovies' and 'find_query'. Either include them or remove the dependency array.",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'authState.user?.favourites' and 'details_query'. Either include them or remove the dependency array.",["160"],"'response' is assigned a value but never used.","'Button' is defined but never used.","'useReducer' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [fetchMovies]",{"range":"167","text":"168"},"Update the dependencies array to be: [fetchMovies, find_query, query]",{"range":"169","text":"170"},"Update the dependencies array to be: [authState.user?.favourites, details_query]",{"range":"171","text":"172"},[908,910],"[fetchMovies]",[1400,1407],"[fetchMovies, find_query, query]",[1921,1923],"[authState.user?.favourites, details_query]"]